{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Human-AI Interaction! Overview In short, the goal of this course is to introduce students to ways of thinking about how Artificial Intelligence will and has impacted humans, and how we can design interactive intelligent systems that are usable and beneficial to humans, and respect human values. As students in this course, you will build a number of different interactive technologies powered by AI, gain practical experience with what impacts their usability for humans, understand the various places that humans exist in the data pipeline that drives machine learning, and learn to think both optimistically and critically of what AI systems can do and how they can and should be integrated into society. Logistics Course : 05618/05318 Human-AI Interaction, Fall 2020 Zoom Link : see the announcement on Canvas. Time : Fall 2020, 3:20-4:40pm T/Th Instructors Haiyi Zhu Email : haiyiz@cs.cmu.edu Office hours : Wed 9:30am - 10:30 pm ET Location : see the announcement on Canvas Steven Wu Email : zstevenwu@cmu.edu Office hours : Monday 4:00pm - 5:00pm ET Location : see the announcement on Canvas Diversity Statement It is our goal that students from all diverse backgrounds and perspectives are well served by this course, that students\u2019 learning needs be addressed both in and out of class, and that the diversity that students bring to this class be viewed as a resource, strength, and benefit. Dimensions of diversity include race, age, national origin, ethnicity, gender identity and expression, intellectual and physical ability, sexual orientation, faith and non-faith perspectives, socio-economic class, political ideology, education, primary language, family status, military experience, cognitive style, and communication style. We are intentional in our aim to present materials and activities that are respectful of diversity, based on these dimensions and any other visible and invisible differences not captured in this list. Indeed, in this class you will learn to approach technology design from an empathetic, human-centered perspective that directly examines and challenges bias and inequality. Your suggestions for ensuring that the class lives up to these values are encouraged and welcomed. In addition, if at any time you experience or witness anything in this class that challenges inclusion, is insensitive or othering, or reinforces biases or stereotypes, please report those experiences using this form (responses can be anonymous). If you\u2019re uncomfortable sharing with your instructors, you may voice your concerns to the chair of the HCII Diversity, Equity, and Inclusion committee, Jodi Forlizzi (forlizzi@cmu.edu) . Communication Canvas : We will be using Canvas for all assignments and grades. Please also post all questions on Canvas as discussions instead of sending emails. Email : If you email your instructors, you might want to include the substring \"HAII Course\" to begin a meaningful subject line and have tried to resolve the issue appropriately otherwise. For example, you should post questions about course material and homework assignments on Canvas first, and then use emails only after an appropriate amount of time has passed without a response. Please use your CMU email account. Grading Percentage Activity 10% Reading Reflections (approximately once a week) 10% In-class Activity Participation 14% Quizzes (15 quizzes in all, lowest score dropped). 50% Assignment 1-5, 10% each 16% Final Project When Work is Due All quizzes happen at the beginning of class on Thursday. Projects and assignments are due on Sundays at 11:59pm. Reading reflections are due just before class on the day we have the scheduled discussion related to the readings. If there is no scheduled discussion, they are due the class after they are assigned (e.g. if assigned on Tuesday, they are due Thursday) Late Assignments We realize that things happen, and that you might sometimes not be able to turn in your assignments. To accommodate this, you will each receive 5 free late days . Beyond those days, you receive a 5% penalty for each day late. You are welcome to budget late days as you like, for instance 3 free days late for one assignment, 2 for another, or all 5 for one. You cannot use late days for quizzes. In-Class Activity During this class on Sept 10th, we will conduct research on how a novel team-based learning activity influences the understanding of the social aspects of fairness metrics in machine learning. This research will involve completing an in-class (during lecture time) activity for a better understanding of the materials taught in the class. You will not be asked to do anything above and beyond the normal learning activities and assignments that are part of this course. You will be required to complete this in-class activity as part of the designed curriculum. However, you will have the choice to opt-out of data collection. Participants will not receive any compensation. Special Accommodations If you have a disability and have an accommodation letter from the Disability Resources office, we encourage you to discuss your accommodations and needs with us as early in the semester as possible. We will work with you to ensure that accommodations are provided as appropriate. If you suspect that you may have a disability and would benefit from accommodations but are not yet registered with the Office of Disability Resources, we encourage you to contact them at access@andrew.cmu.edu . Health & Wellness Take care of yourself. Do your best to maintain a healthy lifestyle this semester by eating well, exercising, avoiding drugs and alcohol, getting enough sleep and taking some time to relax. This will help you achieve your goals and cope with stress. All of us benefit from support during times of struggle. There are many helpful resources available on campus and an important part of the college experience is learning how to ask for help. Asking for support sooner rather than later is almost always helpful. If you or anyone you know experiences any academic stress, difficult life events, or feelings like anxiety or depression, we strongly encourage you to seek support. Counseling and Psychological Services (CaPS) is here to help: call 412-268-2922 and visit their website at http://www.cmu.edu/counseling/ . Consider reaching out to a friend, faculty or family member you trust for help getting connected to the support that can help. If you or someone you know is feeling suicidal or in danger of self-harm, call someone immediately, day or night: CaPS: 412-268-2922 Re:solve Crisis Network: 888-796-8226","title":"Home"},{"location":"#welcome-to-human-ai-interaction","text":"","title":"Welcome to Human-AI Interaction!"},{"location":"#overview","text":"In short, the goal of this course is to introduce students to ways of thinking about how Artificial Intelligence will and has impacted humans, and how we can design interactive intelligent systems that are usable and beneficial to humans, and respect human values. As students in this course, you will build a number of different interactive technologies powered by AI, gain practical experience with what impacts their usability for humans, understand the various places that humans exist in the data pipeline that drives machine learning, and learn to think both optimistically and critically of what AI systems can do and how they can and should be integrated into society.","title":"Overview"},{"location":"#logistics","text":"Course : 05618/05318 Human-AI Interaction, Fall 2020 Zoom Link : see the announcement on Canvas. Time : Fall 2020, 3:20-4:40pm T/Th","title":"Logistics"},{"location":"#instructors","text":"Haiyi Zhu Email : haiyiz@cs.cmu.edu Office hours : Wed 9:30am - 10:30 pm ET Location : see the announcement on Canvas Steven Wu Email : zstevenwu@cmu.edu Office hours : Monday 4:00pm - 5:00pm ET Location : see the announcement on Canvas","title":"Instructors"},{"location":"#diversity-statement","text":"It is our goal that students from all diverse backgrounds and perspectives are well served by this course, that students\u2019 learning needs be addressed both in and out of class, and that the diversity that students bring to this class be viewed as a resource, strength, and benefit. Dimensions of diversity include race, age, national origin, ethnicity, gender identity and expression, intellectual and physical ability, sexual orientation, faith and non-faith perspectives, socio-economic class, political ideology, education, primary language, family status, military experience, cognitive style, and communication style. We are intentional in our aim to present materials and activities that are respectful of diversity, based on these dimensions and any other visible and invisible differences not captured in this list. Indeed, in this class you will learn to approach technology design from an empathetic, human-centered perspective that directly examines and challenges bias and inequality. Your suggestions for ensuring that the class lives up to these values are encouraged and welcomed. In addition, if at any time you experience or witness anything in this class that challenges inclusion, is insensitive or othering, or reinforces biases or stereotypes, please report those experiences using this form (responses can be anonymous). If you\u2019re uncomfortable sharing with your instructors, you may voice your concerns to the chair of the HCII Diversity, Equity, and Inclusion committee, Jodi Forlizzi (forlizzi@cmu.edu) .","title":"Diversity Statement"},{"location":"#communication","text":"Canvas : We will be using Canvas for all assignments and grades. Please also post all questions on Canvas as discussions instead of sending emails. Email : If you email your instructors, you might want to include the substring \"HAII Course\" to begin a meaningful subject line and have tried to resolve the issue appropriately otherwise. For example, you should post questions about course material and homework assignments on Canvas first, and then use emails only after an appropriate amount of time has passed without a response. Please use your CMU email account.","title":"Communication"},{"location":"#grading","text":"Percentage Activity 10% Reading Reflections (approximately once a week) 10% In-class Activity Participation 14% Quizzes (15 quizzes in all, lowest score dropped). 50% Assignment 1-5, 10% each 16% Final Project","title":"Grading"},{"location":"#when-work-is-due","text":"All quizzes happen at the beginning of class on Thursday. Projects and assignments are due on Sundays at 11:59pm. Reading reflections are due just before class on the day we have the scheduled discussion related to the readings. If there is no scheduled discussion, they are due the class after they are assigned (e.g. if assigned on Tuesday, they are due Thursday)","title":"When Work is Due"},{"location":"#late-assignments","text":"We realize that things happen, and that you might sometimes not be able to turn in your assignments. To accommodate this, you will each receive 5 free late days . Beyond those days, you receive a 5% penalty for each day late. You are welcome to budget late days as you like, for instance 3 free days late for one assignment, 2 for another, or all 5 for one. You cannot use late days for quizzes.","title":"Late Assignments"},{"location":"#in-class-activity","text":"During this class on Sept 10th, we will conduct research on how a novel team-based learning activity influences the understanding of the social aspects of fairness metrics in machine learning. This research will involve completing an in-class (during lecture time) activity for a better understanding of the materials taught in the class. You will not be asked to do anything above and beyond the normal learning activities and assignments that are part of this course. You will be required to complete this in-class activity as part of the designed curriculum. However, you will have the choice to opt-out of data collection. Participants will not receive any compensation.","title":"In-Class Activity"},{"location":"#special-accommodations","text":"If you have a disability and have an accommodation letter from the Disability Resources office, we encourage you to discuss your accommodations and needs with us as early in the semester as possible. We will work with you to ensure that accommodations are provided as appropriate. If you suspect that you may have a disability and would benefit from accommodations but are not yet registered with the Office of Disability Resources, we encourage you to contact them at access@andrew.cmu.edu .","title":"Special Accommodations"},{"location":"#health-wellness","text":"Take care of yourself. Do your best to maintain a healthy lifestyle this semester by eating well, exercising, avoiding drugs and alcohol, getting enough sleep and taking some time to relax. This will help you achieve your goals and cope with stress. All of us benefit from support during times of struggle. There are many helpful resources available on campus and an important part of the college experience is learning how to ask for help. Asking for support sooner rather than later is almost always helpful. If you or anyone you know experiences any academic stress, difficult life events, or feelings like anxiety or depression, we strongly encourage you to seek support. Counseling and Psychological Services (CaPS) is here to help: call 412-268-2922 and visit their website at http://www.cmu.edu/counseling/ . Consider reaching out to a friend, faculty or family member you trust for help getting connected to the support that can help. If you or someone you know is feeling suicidal or in danger of self-harm, call someone immediately, day or night: CaPS: 412-268-2922 Re:solve Crisis Network: 888-796-8226","title":"Health &amp; Wellness"},{"location":"calendar/","text":"Course Schedule (Tentative) Week Lecture Topic Readings Slides Week 1 Lecture 1 Introduction to Human-AI Interactions N/A Slides Week 1 Lecture 2 Practical Machine Learning N/A Slides Week 2 Lecture 3 Perspectives on Human-AI Interaction Reading 1 Reading 2 Slides Week 2 Lecture 4 Team-based activities Week 3 Lecture 5 Machine Learning + UX N/A Slides Week 3 Lecture 6 Human Centered AI Design N/A Slides Week 4 Lecture 7 Fairness in ML (Part 1) N/A Slides Week 4 Lecture 8 Fairness in ML (Part 2) Reading 1 Reading 2 Slides Week 5 Lecture 9 Fairness in Algorithmic Hiring (Guest Lecture by Manish Raghavan ) Reading 1 Reading 2 Slides Week 5 Lecture 10 Fairness in Child Welfare Systems (Guest Lecture by Alexandra Chouldechova ) Reading 1 Reading 2 Week 6 Lecture 11 (Differential) Privacy Reading Slides Week 6 Lecture 12 Privacy and Security for Internet of Things (Guest Lecture by Jason Hong ) Reading Slides Week 7 Lecture 13 Interpretability (Part 1) Reading 1 Reading 2 Slides Week 7 Lecture 14 Interpretability (Part 2) (Guest lecture by Hima Lakkaraju ) Reading 1 Reading 2 Slides Week 8 Lecture 15 Social Acceptability, Ethics, and Trust (Part 1) N/A Slides Week 8 Lecture 16 Social Acceptability, Ethics, and Trust (Part 2) Reading: Chapter 6 - Ethics Week 9 Lecture 17 Recommender Systems Reading Slides Week 9 Lecture 18 Recommender Systems (Guest lecture by Michael Ekstrand ) Reading Slides Week 10 Nov. 3rd Election Day--No Class on Tuesday Vote! Week 10 Lecture 19 Neural Networks N/A Slides Week 11 Lecture 20 Generative Adversarial Network (GAN) N/A Slides Week 11 Lecture 21 AI Generated Images Deepfake Reading 1 Watching 2 Slides Week 12 Lecture 22 Reinforcement Learning Reading Slides Week 12 Lecture 23 Application: Self-driving cars (Guest lecture by Gokul Swamy ) Reading Slides Week 13 Lecture 24 Application: Healthcare (Guest lecture by Adam Perer ) Week 13 Nov. 26th Thanksgiving--No Class on Thursday Week 14 Peer Feedback Week 15 Project Presentation","title":"Schedule"},{"location":"calendar/#course-schedule-tentative","text":"Week Lecture Topic Readings Slides Week 1 Lecture 1 Introduction to Human-AI Interactions N/A Slides Week 1 Lecture 2 Practical Machine Learning N/A Slides Week 2 Lecture 3 Perspectives on Human-AI Interaction Reading 1 Reading 2 Slides Week 2 Lecture 4 Team-based activities Week 3 Lecture 5 Machine Learning + UX N/A Slides Week 3 Lecture 6 Human Centered AI Design N/A Slides Week 4 Lecture 7 Fairness in ML (Part 1) N/A Slides Week 4 Lecture 8 Fairness in ML (Part 2) Reading 1 Reading 2 Slides Week 5 Lecture 9 Fairness in Algorithmic Hiring (Guest Lecture by Manish Raghavan ) Reading 1 Reading 2 Slides Week 5 Lecture 10 Fairness in Child Welfare Systems (Guest Lecture by Alexandra Chouldechova ) Reading 1 Reading 2 Week 6 Lecture 11 (Differential) Privacy Reading Slides Week 6 Lecture 12 Privacy and Security for Internet of Things (Guest Lecture by Jason Hong ) Reading Slides Week 7 Lecture 13 Interpretability (Part 1) Reading 1 Reading 2 Slides Week 7 Lecture 14 Interpretability (Part 2) (Guest lecture by Hima Lakkaraju ) Reading 1 Reading 2 Slides Week 8 Lecture 15 Social Acceptability, Ethics, and Trust (Part 1) N/A Slides Week 8 Lecture 16 Social Acceptability, Ethics, and Trust (Part 2) Reading: Chapter 6 - Ethics Week 9 Lecture 17 Recommender Systems Reading Slides Week 9 Lecture 18 Recommender Systems (Guest lecture by Michael Ekstrand ) Reading Slides Week 10 Nov. 3rd Election Day--No Class on Tuesday Vote! Week 10 Lecture 19 Neural Networks N/A Slides Week 11 Lecture 20 Generative Adversarial Network (GAN) N/A Slides Week 11 Lecture 21 AI Generated Images Deepfake Reading 1 Watching 2 Slides Week 12 Lecture 22 Reinforcement Learning Reading Slides Week 12 Lecture 23 Application: Self-driving cars (Guest lecture by Gokul Swamy ) Reading Slides Week 13 Lecture 24 Application: Healthcare (Guest lecture by Adam Perer ) Week 13 Nov. 26th Thanksgiving--No Class on Thursday Week 14 Peer Feedback Week 15 Project Presentation","title":"Course Schedule (Tentative)"},{"location":"assets/custom-js/katex/","text":"KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web. Fast: KaTeX renders its math synchronously and doesn't need to reflow the page. See how it compares to a competitor in this speed test . Print quality: KaTeX\u2019s layout is based on Donald Knuth\u2019s TeX, the gold standard for math typesetting. Self contained: KaTeX has no dependencies and can easily be bundled with your website resources. Server side rendering: KaTeX produces the same output regardless of browser or environment, so you can pre-render expressions using Node.js and send them as plain HTML. KaTeX supports all major browsers, including Chrome, Safari, Firefox, Opera, Edge, and IE 9 - IE 11. More information can be found on the list of supported commands and on the wiki . Usage You can download KaTeX and host it on your server or include the katex.min.js and katex.min.css files on your page directly from a CDN: <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.10.0-alpha/dist/katex.min.css\" integrity=\"sha384-BTL0nVi8DnMrNdMQZG1Ww6yasK9ZGnUxL1ZWukXQ7fygA1py52yPp9W4wrR00VML\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/katex@0.10.0-alpha/dist/katex.min.js\" integrity=\"sha384-y6SGsNt7yZECc4Pf86XmQhC4hG2wxL6Upkt9N1efhFxfh6wlxBH0mJiTE8XYclC1\" crossorigin=\"anonymous\"></script> In-browser rendering Call katex.render with a TeX expression and a DOM element to render into: katex.render(\"c = \\\\pm\\\\sqrt{a^2 + b^2}\", element); To avoid escaping the backslash (double backslash), you can use String.raw (but beware that ${ , \\u and \\x may still need escaping): katex.render(String.raw`c = \\pm\\sqrt{a^2 + b^2}`, element); If KaTeX can't parse the expression, it throws a katex.ParseError error. Server side rendering or rendering to a string To generate HTML on the server or to generate an HTML string of the rendered math, you can use katex.renderToString : var html = katex.renderToString(\"c = \\\\pm\\\\sqrt{a^2 + b^2}\"); // '<span class=\"katex\">...</span>' Make sure to include the CSS and font files, but there is no need to include the JavaScript. Like render , renderToString throws if it can't parse the expression. Security Any HTML generated by KaTeX should be safe from <script> or other code injection attacks. (See maxSize below for preventing large width/height visual affronts, and see maxExpand below for preventing infinite macro loop attacks.) Of course, it is always a good idea to sanitize the HTML, though you will need a rather generous whitelist (including some of SVG and MathML) to support all of KaTeX. Handling errors If KaTeX encounters an error (invalid or unsupported LaTeX) and throwOnError hasn't been set to false , then it will throw an exception of type katex.ParseError . The message in this error includes some of the LaTeX source code, so needs to be escaped if you want to render it to HTML. In particular, you should convert & , < , > characters to &amp; , &lt; , &gt; (e.g., using _.escape ) before including either LaTeX source code or exception messages in your HTML/DOM. (Failure to escape in this way makes a <script> injection attack possible if your LaTeX source is untrusted.) Alternatively, you can set throwOnError to false to use built-in behavior of rendering the LaTeX source code with hover text stating the error. Rendering options You can provide an object of options as the last argument to katex.render and katex.renderToString . Available options are: displayMode : boolean . If true the math will be rendered in display mode, which will put the math in display style (so \\int and \\sum are large, for example), and will center the math on the page on its own line. If false the math will be rendered in inline mode. (default: false ) throwOnError : boolean . If true (the default), KaTeX will throw a ParseError when it encounters an unsupported command or invalid LaTeX. If false , KaTeX will render unsupported commands as text, and render invalid LaTeX as its source code with hover text giving the error, in the color given by errorColor . errorColor : string . A color string given in the format \"#XXX\" or \"#XXXXXX\" . This option determines the color that unsupported commands and invalid LaTeX are rendered in when throwOnError is set to false . (default: #cc0000 ) macros : object . A collection of custom macros. Each macro is a property with a name like \\name (written \"\\\\name\" in JavaScript) which maps to a string that describes the expansion of the macro. Single-character keys can also be included in which case the character will be redefined as the given macro (similar to TeX active characters). This object will be modified if the LaTeX code defines its own macros via \\gdef , which enables consecutive calls to KaTeX to share state. colorIsTextColor : boolean . If true , \\color will work like LaTeX's \\textcolor , and take two arguments (e.g., \\color{blue}{hello} ), which restores the old behavior of KaTeX (pre-0.8.0). If false (the default), \\color will work like LaTeX's \\color , and take one argument (e.g., \\color{blue}hello ). In both cases, \\textcolor works as in LaTeX (e.g., \\textcolor{blue}{hello} ). maxSize : number . All user-specified sizes, e.g. in \\rule{500em}{500em} , will be capped to maxSize ems. If set to Infinity (the default), users can make elements and spaces arbitrarily large. maxExpand : number . Limit the number of macro expansions to the specified number, to prevent e.g. infinite macro loops. If set to Infinity , the macro expander will try to fully expand as in LaTeX. (default: 1000) strict : boolean or string or function (default: \"warn\" ). If false or \"ignore \", allow features that make writing LaTeX convenient but are not actually supported by (Xe)LaTeX (similar to MathJax). If true or \"error\" (LaTeX faithfulness mode), throw an error for any such transgressions. If \"warn\" (the default), warn about such behavior via console.warn . Provide a custom function handler(errorCode, errorMsg, token) to customize behavior depending on the type of transgression (summarized by the string code errorCode and detailed in errorMsg ); this function can also return \"ignore\" , \"error\" , or \"warn\" to use a built-in behavior. A list of such features and their errorCode s: \"unknownSymbol\" : Use of unknown Unicode symbol, which will likely also lead to warnings about missing character metrics, and layouts may be incorrect (especially in terms of vertical heights). \"unicodeTextInMathMode\" : Use of Unicode text characters in math mode. \"mathVsTextUnits\" : Mismatch of math vs. text commands and units/mode. A second category of errorCode s never throw errors, but their strictness affects the behavior of KaTeX: \"newLineInDisplayMode\" : Use of \\\\ or \\newline in display mode (outside an array/tabular environment). In strict mode, no line break results, as in LaTeX. For example: katex.render(\"c = \\\\pm\\\\sqrt{a^2 + b^2}\\\\in\\\\RR\", element, { displayMode: true, macros: { \"\\\\RR\": \"\\\\mathbb{R}\" } }); Automatic rendering of math on a page Math on the page can be automatically rendered using the auto-render extension. See the Auto-render README for more information. Font size and lengths By default, KaTeX math is rendered in a 1.21\u00d7 larger font than the surrounding context, which makes super- and subscripts easier to read. You can control this using CSS, for example: .katex { font-size: 1.1em; } KaTeX supports all TeX units, including absolute units like cm and in . Absolute units are currently scaled relative to the default TeX font size of 10pt, so that \\kern1cm produces the same results as \\kern2.845275em . As a result, relative and absolute units are both uniformly scaled relative to LaTeX with a 10pt font; for example, the rectangle \\rule{1cm}{1em} has the same aspect ratio in KaTeX as in LaTeX. However, because most browsers default to a larger font size, this typically means that a 1cm kern in KaTeX will appear larger than 1cm in browser units. Common Issues Many Markdown preprocessors, such as the one that Jekyll and GitHub Pages use, have a \"smart quotes\" feature. This changes ' to \u2019 which is an issue for math containing primes, e.g. f' . This can be worked around by defining a single character macro which changes them back, e.g. {\"\u2019\", \"'\"} . KaTeX follows LaTeX's rendering of aligned and matrix environments unlike MathJax. When displaying fractions one above another in these vertical layouts there may not be enough space between rows for people who are used to MathJax's rendering. The distance between rows can be adjusted by using \\\\[0.1em] instead of the standard line separator distance. KaTeX does not support the align environment because LaTeX doesn't support align in math mode. The aligned environment offers the same functionality but in math mode, so use that instead or define a macro that maps align to aligned . MathJax defines \\color to be like \\textcolor by default; set KaTeX's colorIsTextColor option to true for this behavior. KaTeX's default behavior matches MathJax with its color.js extension enabled. Libraries Angular2+ ng-katex Angular module to write beautiful math expressions with TeX syntax boosted by KaTeX library React react-latex React component to render latex strings, based on KaTeX react-katex React components that use KaTeX to typeset math expressions Ruby katex-ruby Provides server-side rendering and integration with popular Ruby web frameworks (Rails, Hanami, and anything that uses Sprockets). Contributing See CONTRIBUTING.md License KaTeX is licensed under the MIT License .","title":"[<img src=\"https://khan.github.io/KaTeX/katex-logo.svg\" width=\"130\" alt=\"KaTeX\">](https://khan.github.io/KaTeX/)"},{"location":"assets/custom-js/katex/#_1","text":"KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web. Fast: KaTeX renders its math synchronously and doesn't need to reflow the page. See how it compares to a competitor in this speed test . Print quality: KaTeX\u2019s layout is based on Donald Knuth\u2019s TeX, the gold standard for math typesetting. Self contained: KaTeX has no dependencies and can easily be bundled with your website resources. Server side rendering: KaTeX produces the same output regardless of browser or environment, so you can pre-render expressions using Node.js and send them as plain HTML. KaTeX supports all major browsers, including Chrome, Safari, Firefox, Opera, Edge, and IE 9 - IE 11. More information can be found on the list of supported commands and on the wiki .","title":""},{"location":"assets/custom-js/katex/#usage","text":"You can download KaTeX and host it on your server or include the katex.min.js and katex.min.css files on your page directly from a CDN: <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.10.0-alpha/dist/katex.min.css\" integrity=\"sha384-BTL0nVi8DnMrNdMQZG1Ww6yasK9ZGnUxL1ZWukXQ7fygA1py52yPp9W4wrR00VML\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/katex@0.10.0-alpha/dist/katex.min.js\" integrity=\"sha384-y6SGsNt7yZECc4Pf86XmQhC4hG2wxL6Upkt9N1efhFxfh6wlxBH0mJiTE8XYclC1\" crossorigin=\"anonymous\"></script>","title":"Usage"},{"location":"assets/custom-js/katex/#in-browser-rendering","text":"Call katex.render with a TeX expression and a DOM element to render into: katex.render(\"c = \\\\pm\\\\sqrt{a^2 + b^2}\", element); To avoid escaping the backslash (double backslash), you can use String.raw (but beware that ${ , \\u and \\x may still need escaping): katex.render(String.raw`c = \\pm\\sqrt{a^2 + b^2}`, element); If KaTeX can't parse the expression, it throws a katex.ParseError error.","title":"In-browser rendering"},{"location":"assets/custom-js/katex/#server-side-rendering-or-rendering-to-a-string","text":"To generate HTML on the server or to generate an HTML string of the rendered math, you can use katex.renderToString : var html = katex.renderToString(\"c = \\\\pm\\\\sqrt{a^2 + b^2}\"); // '<span class=\"katex\">...</span>' Make sure to include the CSS and font files, but there is no need to include the JavaScript. Like render , renderToString throws if it can't parse the expression.","title":"Server side rendering or rendering to a string"},{"location":"assets/custom-js/katex/#security","text":"Any HTML generated by KaTeX should be safe from <script> or other code injection attacks. (See maxSize below for preventing large width/height visual affronts, and see maxExpand below for preventing infinite macro loop attacks.) Of course, it is always a good idea to sanitize the HTML, though you will need a rather generous whitelist (including some of SVG and MathML) to support all of KaTeX.","title":"Security"},{"location":"assets/custom-js/katex/#handling-errors","text":"If KaTeX encounters an error (invalid or unsupported LaTeX) and throwOnError hasn't been set to false , then it will throw an exception of type katex.ParseError . The message in this error includes some of the LaTeX source code, so needs to be escaped if you want to render it to HTML. In particular, you should convert & , < , > characters to &amp; , &lt; , &gt; (e.g., using _.escape ) before including either LaTeX source code or exception messages in your HTML/DOM. (Failure to escape in this way makes a <script> injection attack possible if your LaTeX source is untrusted.) Alternatively, you can set throwOnError to false to use built-in behavior of rendering the LaTeX source code with hover text stating the error.","title":"Handling errors"},{"location":"assets/custom-js/katex/#rendering-options","text":"You can provide an object of options as the last argument to katex.render and katex.renderToString . Available options are: displayMode : boolean . If true the math will be rendered in display mode, which will put the math in display style (so \\int and \\sum are large, for example), and will center the math on the page on its own line. If false the math will be rendered in inline mode. (default: false ) throwOnError : boolean . If true (the default), KaTeX will throw a ParseError when it encounters an unsupported command or invalid LaTeX. If false , KaTeX will render unsupported commands as text, and render invalid LaTeX as its source code with hover text giving the error, in the color given by errorColor . errorColor : string . A color string given in the format \"#XXX\" or \"#XXXXXX\" . This option determines the color that unsupported commands and invalid LaTeX are rendered in when throwOnError is set to false . (default: #cc0000 ) macros : object . A collection of custom macros. Each macro is a property with a name like \\name (written \"\\\\name\" in JavaScript) which maps to a string that describes the expansion of the macro. Single-character keys can also be included in which case the character will be redefined as the given macro (similar to TeX active characters). This object will be modified if the LaTeX code defines its own macros via \\gdef , which enables consecutive calls to KaTeX to share state. colorIsTextColor : boolean . If true , \\color will work like LaTeX's \\textcolor , and take two arguments (e.g., \\color{blue}{hello} ), which restores the old behavior of KaTeX (pre-0.8.0). If false (the default), \\color will work like LaTeX's \\color , and take one argument (e.g., \\color{blue}hello ). In both cases, \\textcolor works as in LaTeX (e.g., \\textcolor{blue}{hello} ). maxSize : number . All user-specified sizes, e.g. in \\rule{500em}{500em} , will be capped to maxSize ems. If set to Infinity (the default), users can make elements and spaces arbitrarily large. maxExpand : number . Limit the number of macro expansions to the specified number, to prevent e.g. infinite macro loops. If set to Infinity , the macro expander will try to fully expand as in LaTeX. (default: 1000) strict : boolean or string or function (default: \"warn\" ). If false or \"ignore \", allow features that make writing LaTeX convenient but are not actually supported by (Xe)LaTeX (similar to MathJax). If true or \"error\" (LaTeX faithfulness mode), throw an error for any such transgressions. If \"warn\" (the default), warn about such behavior via console.warn . Provide a custom function handler(errorCode, errorMsg, token) to customize behavior depending on the type of transgression (summarized by the string code errorCode and detailed in errorMsg ); this function can also return \"ignore\" , \"error\" , or \"warn\" to use a built-in behavior. A list of such features and their errorCode s: \"unknownSymbol\" : Use of unknown Unicode symbol, which will likely also lead to warnings about missing character metrics, and layouts may be incorrect (especially in terms of vertical heights). \"unicodeTextInMathMode\" : Use of Unicode text characters in math mode. \"mathVsTextUnits\" : Mismatch of math vs. text commands and units/mode. A second category of errorCode s never throw errors, but their strictness affects the behavior of KaTeX: \"newLineInDisplayMode\" : Use of \\\\ or \\newline in display mode (outside an array/tabular environment). In strict mode, no line break results, as in LaTeX. For example: katex.render(\"c = \\\\pm\\\\sqrt{a^2 + b^2}\\\\in\\\\RR\", element, { displayMode: true, macros: { \"\\\\RR\": \"\\\\mathbb{R}\" } });","title":"Rendering options"},{"location":"assets/custom-js/katex/#automatic-rendering-of-math-on-a-page","text":"Math on the page can be automatically rendered using the auto-render extension. See the Auto-render README for more information.","title":"Automatic rendering of math on a page"},{"location":"assets/custom-js/katex/#font-size-and-lengths","text":"By default, KaTeX math is rendered in a 1.21\u00d7 larger font than the surrounding context, which makes super- and subscripts easier to read. You can control this using CSS, for example: .katex { font-size: 1.1em; } KaTeX supports all TeX units, including absolute units like cm and in . Absolute units are currently scaled relative to the default TeX font size of 10pt, so that \\kern1cm produces the same results as \\kern2.845275em . As a result, relative and absolute units are both uniformly scaled relative to LaTeX with a 10pt font; for example, the rectangle \\rule{1cm}{1em} has the same aspect ratio in KaTeX as in LaTeX. However, because most browsers default to a larger font size, this typically means that a 1cm kern in KaTeX will appear larger than 1cm in browser units.","title":"Font size and lengths"},{"location":"assets/custom-js/katex/#common-issues","text":"Many Markdown preprocessors, such as the one that Jekyll and GitHub Pages use, have a \"smart quotes\" feature. This changes ' to \u2019 which is an issue for math containing primes, e.g. f' . This can be worked around by defining a single character macro which changes them back, e.g. {\"\u2019\", \"'\"} . KaTeX follows LaTeX's rendering of aligned and matrix environments unlike MathJax. When displaying fractions one above another in these vertical layouts there may not be enough space between rows for people who are used to MathJax's rendering. The distance between rows can be adjusted by using \\\\[0.1em] instead of the standard line separator distance. KaTeX does not support the align environment because LaTeX doesn't support align in math mode. The aligned environment offers the same functionality but in math mode, so use that instead or define a macro that maps align to aligned . MathJax defines \\color to be like \\textcolor by default; set KaTeX's colorIsTextColor option to true for this behavior. KaTeX's default behavior matches MathJax with its color.js extension enabled.","title":"Common Issues"},{"location":"assets/custom-js/katex/#libraries","text":"","title":"Libraries"},{"location":"assets/custom-js/katex/#angular2","text":"ng-katex Angular module to write beautiful math expressions with TeX syntax boosted by KaTeX library","title":"Angular2+"},{"location":"assets/custom-js/katex/#react","text":"react-latex React component to render latex strings, based on KaTeX react-katex React components that use KaTeX to typeset math expressions","title":"React"},{"location":"assets/custom-js/katex/#ruby","text":"katex-ruby Provides server-side rendering and integration with popular Ruby web frameworks (Rails, Hanami, and anything that uses Sprockets).","title":"Ruby"},{"location":"assets/custom-js/katex/#contributing","text":"See CONTRIBUTING.md","title":"Contributing"},{"location":"assets/custom-js/katex/#license","text":"KaTeX is licensed under the MIT License .","title":"License"},{"location":"hw/hw1/","text":"Assignment 1 The goal of assignment #1 is to get some hands-on experience working with data about human activity and some simple machine learning. PART A: SETUP If you already have a working Python 3 & Jupyter notebook installation and are familiar with them, feel free to skip this part. Option 1: Local installation instruction . Option 2: You can also use Google\u2019s cloud-hosted Jupyter notebooks, called Colab . By clicking on the Colab link, you should be prompted to open a notebook. You can also click on \"File\" and select \"Open notebook.\" You can select \"GitHub\" and search \"haiicmu\", which should show you the following image: Note: When you are reading data in our notebook, you need to copy the \u201cdata\u201d folder to some place you can access from Colab. See this blog post or other online resources for how to do this. PART B: PREDICTING LOAN APPROVAL Open the notebook Home_Loan_Prediction.ipynb and data in the GitHub Link , and complete the questions within the notebook. SUBMITTING HOMEWORK Download just your notebook file and submit on canvas.","title":"Assignment 1"},{"location":"hw/hw1/#assignment-1","text":"The goal of assignment #1 is to get some hands-on experience working with data about human activity and some simple machine learning.","title":"Assignment 1"},{"location":"hw/hw1/#part-a-setup","text":"If you already have a working Python 3 & Jupyter notebook installation and are familiar with them, feel free to skip this part. Option 1: Local installation instruction . Option 2: You can also use Google\u2019s cloud-hosted Jupyter notebooks, called Colab . By clicking on the Colab link, you should be prompted to open a notebook. You can also click on \"File\" and select \"Open notebook.\" You can select \"GitHub\" and search \"haiicmu\", which should show you the following image: Note: When you are reading data in our notebook, you need to copy the \u201cdata\u201d folder to some place you can access from Colab. See this blog post or other online resources for how to do this.","title":"PART A: SETUP"},{"location":"hw/hw1/#part-b-predicting-loan-approval","text":"Open the notebook Home_Loan_Prediction.ipynb and data in the GitHub Link , and complete the questions within the notebook.","title":"PART B: PREDICTING LOAN APPROVAL"},{"location":"hw/hw1/#submitting-homework","text":"Download just your notebook file and submit on canvas.","title":"SUBMITTING HOMEWORK"},{"location":"resources/others/","text":"Related Courses Previous offering by Chinmay Kulkarni and Mary Beth Kery","title":"Related courses"},{"location":"resources/others/#related-courses","text":"Previous offering by Chinmay Kulkarni and Mary Beth Kery","title":"Related Courses"},{"location":"resources/python/","text":"Python Resources Python Python tutorials PyTorch Check out PyTorch and its tutorials","title":"Python"},{"location":"resources/python/#python-resources","text":"","title":"Python Resources"},{"location":"resources/python/#python","text":"Python tutorials","title":"Python"},{"location":"resources/python/#pytorch","text":"Check out PyTorch and its tutorials","title":"PyTorch"}]}